ns("Core").Game=Class.create({initialize:function(Container){this.Canvas=document.createElement('Canvas');this.Context=this.Canvas.getContext("2d");Container.innerHTML="";Container.appendChild(this.Canvas);this.Canvas.width=Container.offsetWidth;this.Canvas.height=Container.offsetHeight;var last=new Date();var self=this;var LoopFunction=function(){var now=new Date();self.Tick((now-last)/1000);var NewGraphics=new Drawing.Graphics(self.Canvas.width,self.Canvas.height);self.Draw(NewGraphics);self.Context.clearRect(0,0,self.Context.width,self.Context.height);self.Context=NewGraphics.MergeContext(self.Context);last=now;};var animFrame=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||null;if(animFrame!==null){var recursiveAnim=function(){LoopFunction();animFrame(recursiveAnim);};animFrame(recursiveAnim);}else{var ONE_FRAME_TIME=1000.0/60.0;setInterval(LoopFunction(),ONE_FRAME_TIME);}
this.Load();},Load:function(){},Tick:function(elapsed){},Draw:function(e){}});function ns(namespaceString){var parts=namespaceString.split('.'),parent=window,currentPart='';for(var i=0,length=parts.length;i<length;i++){currentPart=parts[i];parent[currentPart]=parent[currentPart]||{};parent=parent[currentPart];}
return parent;}
ns("Drawing").Color=Class.create({initialize:function(Red,Green,Blue,Alpha){this.Red=Red;this.Green=Green;this.Blue=Blue;this.Alpha=Alpha;},toString:function(){return"rgba("+this.Red+","+this.Green+","+this.Blue+","+this.Alpha+")";}});ns("Drawing").Colors={Aqua:new Drawing.Color(0,255,255,1),Black:new Drawing.Color(0,0,0,1),Blue:new Drawing.Color(0,0,255,1),Fuchsia:new Drawing.Color(255,0,255,1),Green:new Drawing.Color(0,128,0,1),Gray:new Drawing.Color(128,128,128,1),Lime:new Drawing.Color(0,255,0,1),Maroon:new Drawing.Color(128,0,0,1),Navy:new Drawing.Color(0,0,128,1),Olive:new Drawing.Color(128,128,0,1),Purple:new Drawing.Color(128,0,128,1),Red:new Drawing.Color(255,0,0,1),Silver:new Drawing.Color(192,192,192,1),Teal:new Drawing.Color(0,128,128,1),White:new Drawing.Color(255,255,255,1),Yellow:new Drawing.Color(255,255,1,1)};ns("Drawing").Graphics=Class.create({initialize:function(Width,Height){this.Width=Width;this.Height=Height;this.Canvas=document.createElement('Canvas');this.Canvas.width=Width;this.Canvas.height=Height;this.Context=this.Canvas.getContext("2d");},MergeContext:function(OriginalContext){OriginalContext.putImageData(this.Context.getImageData(0,0,this.Width,this.Height),0,0);return OriginalContext;},Merge:function(NewGraphics,X,Y){this.Context.drawImage(NewGraphics.Canvas,X,Y);},DrawBitmap:function(Image,Position,Size){},DrawRectangle:function(Color,LineWidth,Rectangle){this.Context.strokeStyle=Color.toString();this.Context.lineWidth=LineWidth;this.Context.strokeRect(Rectangle.X,Rectangle.Y,Rectangle.Width,Rectangle.Height);},FillRectangle:function(Color,Rectangle){this.Context.fillStyle=Color.toString();this.Context.fillRect(Rectangle.X,Rectangle.Y,Rectangle.Width,Rectangle.Height);},DrawLine:function(Color,LineWidth,Vector1,Vector2){this.Context.strokeStyle=Color.toString();this.Context.lineWidth=LineWidth;this.Context.beginPath();this.Context.moveTo(Vector1.X,Vector1.Y);this.Context.lineTo(Vector2.X,Vector2.Y);this.Context.closePath();this.Context.stroke();},DrawPolygon:function(Color,LineWidth,VectorArray){this.Context.strokeStyle=Color.toString();this.Context.lineWidth=LineWidth;this.Context.beginPath();this.Context.moveTo(VectorArray[0].X,VectorArray[0].Y);for(var i=1;i<VectorArray.length;i++){this.Context.lineTo(VectorArray[i].X,VectorArray[i].Y);}
this.Context.closePath();this.Context.stroke();},FillPolygon:function(Color,VectorArray){this.Context.fillStyle=Color.toString();this.Context.beginPath();this.Context.moveTo(VectorArray[0].X,VectorArray[0].Y);for(var i=1;i<VectorArray.length;i++){this.Context.lineTo(VectorArray[i].X,VectorArray[i].Y);}
this.Context.closePath();this.Context.fill();},DrawString:function(Text,Color,Font,Position){},MeasureString:function(Text,Font){}});ns("Geometry").Rectangle=Class.create({initialize:function(X,Y,Width,Height){this.X=X;this.Y=Y;this.Width=Width;this.Height=Height;}});